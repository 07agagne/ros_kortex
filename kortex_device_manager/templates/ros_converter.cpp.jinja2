/*
* KINOVA (R) KORTEX (TM)
*
* Copyright (c) 2018 Kinova inc. All rights reserved.
*
* This software may be modified and distributed under the
* terms of the BSD 3-Clause license.
*
* Refer to the LICENSE file for details.
*
*/

/*
 * This file has been auto-generated and should not be modified.
 */
 
#include "{{currentPackageName|lower}}_ros_converter.h"
{% if 'Common' not in currentPackageName %}
#include "common_ros_converter.h"
{% endif %}

{% for detailed_message in item -%}
int ToRosData({{detailed_message.message.name}} input, kortex_device_manager::{{detailed_message.message.name}} &output)
{
	{%- for field in detailed_message.message.field %}
	{%- if not field.HasField("oneof_index") %}
	{%- if field.label == 3 %} {# Si c'est un repeated #}
	{% if field.type == 11 %}
	{%- set splitTypeName = field.type_name.split('.') -%}
	output.{{field.name|lower}}.clear();
	for(int i = 0; i < input.{{field.name|lower}}_size(); i++)
	{
		kortex_device_manager::{{splitTypeName[4]}} temp;
		ToRosData(input.{{field.name}}(i), temp);
		output.{{field.name}}.push_back(temp);
	}
	{%- else %}
	output.{{field.name}}.clear();
	for(int i = 0; i < input.{{field.name|lower}}_size(); i++)
	{
		output.{{field.name}}.push_back(input.{{field.name|lower}}(i));
	}	
	{%- endif %}
	{%- else %}
	{%- if field.type == 11 %}
	ToRosData(input.{{field.name}}(), output.{{field.name}});
	{%- elif field.type == 14 %}
	{%- set list1 = field.type_name.split('.') -%} {# Cette ligne sert Ã  enlever les namespace dans le nom du type #}
	output.{{field.name}} = input.{{field.name}}(); 
	{%- elif field.type == 12 %}
	output.{{field.name}} = std::vector<uint8_t>(input.{{field.name}}().begin(), input.{{field.name}}().end());
	{%- else %}
	output.{{field.name}} = input.{{field.name}}(); 
	{%- endif %}
	{%- endif %}
	{%- endif %}
	{%- endfor %}
	
	{% if detailed_message.HasOneOf == "true" %}
	auto oneof_type = input.{{detailed_message.message.ListFields()[-1][1][0].name}}_case();

	switch(oneof_type)
	{
	{%- for field in detailed_message.message.field -%}
	{%- if field.HasField("oneof_index") -%}
	{%- set splitTypeName = field.type_name.split('.') %}
	{%- set EnumName = field.name.replace("_", " ").title().replace(" ", "") %}
		case {{detailed_message.message.name}}::k{{EnumName}}:
		{
	{%- if field.type == 11 %}
			kortex_device_manager::{{splitTypeName[4]}} temp;
			ToRosData(input.{{field.name}}(), temp);
			output.oneof_{{detailed_message.message.ListFields()[-1][1][0].name}}.{{field.name}}.push_back(temp);
	{%- elif field.type == 14 %}
			output.oneof_{{detailed_message.message.ListFields()[-1][1][0].name}}.{{field.name}}.push_back(input.{{field.name}}());
	{% endif %}
			break;
		}
	{% endif %}
	{%- endfor %}
	}
	{% endif -%}

	return 0;
}
{% endfor %}
