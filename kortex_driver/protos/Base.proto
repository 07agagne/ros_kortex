/**
 * Base related messages.
 *
 */
syntax = "proto3";

import public "Common.proto";
import public "Errors.proto";

package Kinova.Api.Base;

/**
 * Service providing Base commands
 */
service Base {//@PROXY_ID=2 @ERROR=Kinova.Api.Error
    
    //Creates a User Profile
    rpc CreateUserProfile (FullUserProfile) returns (Kinova.Api.Common.UserProfileHandle);//@RPC_ID=1
    
    //Updates an existing User Profile
    rpc UpdateUserProfile (UserProfile) returns (Kinova.Api.Common.Empty);//@RPC_ID=2
    
    //Retrieves an existing User Profile
    rpc ReadUserProfile (Kinova.Api.Common.UserProfileHandle) returns (UserProfile);//@RPC_ID=3
    
    //Deletes an existing User Profile
    rpc DeleteUserProfile (Kinova.Api.Common.UserProfileHandle) returns (Kinova.Api.Common.Empty);//@RPC_ID=4
    
    //Retrieves all User Profiles
    rpc ReadAllUserProfiles (Kinova.Api.Common.Empty) returns (UserProfileList);//@RPC_ID=5
    
    //Retrieves the list of Usernames
    rpc ReadAllUsers (Kinova.Api.Common.Empty) returns (UserList);//@RPC_ID=6
    
    //Changes password of an existing user
    rpc ChangePassword (PasswordChange) returns (Kinova.Api.Common.Empty);//@RPC_ID=7
    
    //Creates a new Sequence
    rpc CreateSequence (Sequence) returns (SequenceHandle);//@RPC_ID=8
    
    //Updates an existing Sequence
    rpc UpdateSequence (Sequence) returns (Kinova.Api.Common.Empty);//@RPC_ID=9
      
    //Updates an existing Sequence
    rpc ReadSequence (SequenceHandle) returns (Sequence);//@RPC_ID=10
    
    //Deletes an existing sequence
    rpc DeleteSequence (SequenceHandle) returns (Kinova.Api.Common.Empty);//@RPC_ID=11
    
    //Retrieves all existing sequences
    rpc ReadAllSequences (Kinova.Api.Common.Empty) returns (SequenceList);//@RPC_ID=12
    
    //Deletes a specific task from the specified sequence
    rpc DeleteSequenceTask (SequenceTaskHandle) returns (Kinova.Api.Common.Empty);//@RPC_ID=13
    
    //Deletes all tasks from the specified sequence
    rpc DeleteAllSequenceTasks (SequenceHandle) returns (Kinova.Api.Common.Empty);//@RPC_ID=14
    
    //Plays an existing sequence
    rpc PlaySequence (SequenceHandle) returns (Kinova.Api.Common.Empty);//@RPC_ID=15
    
    //Plays an existing sequence with options
    rpc PlayAdvancedSequence (AdvancedSequenceHandle) returns (Kinova.Api.Common.Empty);//@RPC_ID=16
    
    //Stops execution of currently played sequence
    rpc StopSequence (Kinova.Api.Common.Empty) returns (Kinova.Api.Common.Empty);//@RPC_ID=17
    
    //Pauses execution of currently played sequence
    rpc PauseSequence (Kinova.Api.Common.Empty) returns (Kinova.Api.Common.Empty);//@RPC_ID=18
    
    //Resumes execution of currently paused sequence
    rpc ResumeSequence (Kinova.Api.Common.Empty) returns (Kinova.Api.Common.Empty);//@RPC_ID=19
    
    //Creates a Protection zone
    rpc CreateProtectionZone (ProtectionZone) returns (ProtectionZoneHandle);//@RPC_ID=20
    
    //Updates an existing Protection zone
    rpc UpdateProtectionZone (ProtectionZone) returns (Kinova.Api.Common.Empty);//@RPC_ID=21
    
    //Retrieve an existing protection zone
    rpc ReadProtectionZone (ProtectionZoneHandle) returns (ProtectionZone);//@RPC_ID=22
    
    //Deletes an existing protection zone
    rpc DeleteProtectionZone (ProtectionZoneHandle) returns (Kinova.Api.Common.Empty);//@RPC_ID=23
    
    //Retrieves all protection zones
    rpc ReadAllProtectionZones (Kinova.Api.Common.Empty) returns (ProtectionZoneList);//@RPC_ID=24
           
    //Creates a Mapping
    rpc CreateMapping (Mapping) returns (MappingHandle);//@RPC_ID=26
    
    //Retrieves an existing mapping
    rpc ReadMapping (MappingHandle) returns (Mapping);//@RPC_ID=27
    
    //Retrieves all mappings
    rpc ReadAllMappings (Kinova.Api.Common.Empty) returns (MappingList);//@RPC_ID=30
    
    //Creates a new map
    rpc CreateMap (Map) returns (MapHandle);//@RPC_ID=36
        
    //Retrieves all maps associated to the specified mapping
    rpc ReadAllMaps (MappingHandle) returns (MapList);//@RPC_ID=40    
    
    //Makes the specified Map active within the specified Map group and Mapping
    rpc ActivateMap (ActivateMapHandle) returns (Kinova.Api.Common.Empty);//@RPC_ID=41
    
    //Creates an action
    rpc CreateAction (Action) returns (ActionHandle);//@RPC_ID=42
    
    //Retrieves an existing action
    rpc ReadAction (ActionHandle) returns (Action);//@RPC_ID=43
    
    //Retrieves all existing actions
    rpc ReadAllActions (RequestedActionType) returns (ActionList);//@RPC_ID=44
    
    //Deletes an existing action
    rpc DeleteAction (ActionHandle) returns (Kinova.Api.Common.Empty);//@RPC_ID=45
    
    //Update an existing action
    rpc UpdateAction (Action) returns (Kinova.Api.Common.Empty);//@RPC_ID=46
    
    //Asks the robot to executes the specified existing action
    rpc ExecuteActionFromReference (ActionHandle) returns (Kinova.Api.Common.Empty);//@RPC_ID=47
    
    //Asks the robot to execute the specified action
    rpc ExecuteAction (Action) returns (Kinova.Api.Common.Empty);//@RPC_ID=48
    
    //Pauses the execution of the currently executed action. ResumeAction can be invoked afterwards.
    rpc PauseAction (Kinova.Api.Common.Empty) returns (Kinova.Api.Common.Empty);//@RPC_ID=49
    
    //Stops the execution of the currently executed action. ResumeAction cannot be invoked afterwards.
    rpc StopAction (Kinova.Api.Common.Empty) returns (Kinova.Api.Common.Empty);//@RPC_ID=50
    
    //Resumes the execution of the currently paused action
    rpc ResumeAction (Kinova.Api.Common.Empty) returns (Kinova.Api.Common.Empty);//@RPC_ID=51
      
    //Retrieves the IPv4 network configuration for the specified Network adapter
    rpc GetIPv4Configuration (NetworkHandle) returns (IPv4Configuration);//@RPC_ID=59
    
    //Modifies the IPv4 network configuration for the specified Network adapter
    rpc SetIPv4Configuration (FullIPv4Configuration) returns (Kinova.Api.Common.Empty);//@RPC_ID=60
    
    //Enables (or disables) the specified communication interface
    rpc SetCommunicationInterfaceEnable (CommunicationInterfaceConfiguration) returns (Kinova.Api.Common.Empty);//@RPC_ID=61
   
    //Determines if the specified communication interface is enabled (or disabled)
    rpc IsCommunicationInterfaceEnable (NetworkHandle) returns (CommunicationInterfaceConfiguration);//@RPC_ID=62
        
    //Retrieves the list of available Wifi networks
    rpc GetAvailableWifi (Kinova.Api.Common.Empty) returns (WifiInformationList);//@RPC_ID=63
    
    //Retrieves information about a specific Wifi network
    rpc GetWifiInformation (Ssid) returns (WifiInformation);//@RPC_ID=64
    
    //Configures a specific Wifi network
    rpc AddWifiConfiguration (WifiConfiguration) returns (Kinova.Api.Common.Empty);//@RPC_ID=65
    
    //Deletes a specific Wifi network
    rpc DeleteWifiConfiguration (Ssid) returns (Kinova.Api.Common.Empty);//@RPC_ID=66
    
    //Retrieves the list of configured Wifi networks
    rpc GetAllConfiguredWifis (Kinova.Api.Common.Empty) returns (WifiConfigurationList);//@RPC_ID=67
    
    //Connects robot to specified Wifi network
    rpc ConnectWifi (Ssid) returns (Kinova.Api.Common.Empty);//@RPC_ID=68
    
    //Disconnects the robot from currently connected Wifi network
    rpc DisconnectWifi (Kinova.Api.Common.Empty) returns (Kinova.Api.Common.Empty);//@RPC_ID=69
    
    //Gets information about the connected Wifi network
    rpc GetConnectedWifiInformation (Kinova.Api.Common.Empty) returns (WifiInformation);//@RPC_ID=70

    //Unsubscribes client from receiving specified types of notifications
    rpc Unsubscribe (Kinova.Api.Common.NotificationHandle) returns (Kinova.Api.Common.Empty);//@RPC_ID=97 @UNSUB
    
    //Subscribes to configuration change notifications
    rpc ConfigurationChangeTopic (Kinova.Api.Common.NotificationOptions) returns (Kinova.Api.Common.NotificationHandle);//@RPC_ID=98 @PUB_SUB=ConfigurationChangeNotification
    
    //Subscribes to mapping information notifications
    rpc MappingInfoTopic (Kinova.Api.Common.NotificationOptions) returns (Kinova.Api.Common.NotificationHandle);//@RPC_ID=99 @PUB_SUB=MappingInfoNotification
    
    //Subscribes to control mode notifications
    rpc ControlModeTopic (Kinova.Api.Common.NotificationOptions) returns (Kinova.Api.Common.NotificationHandle);//@RPC_ID=100 @PUB_SUB=ControlModeNotification
    
    //Subscribes to operating mode notifications
    rpc OperatingModeTopic (Kinova.Api.Common.NotificationOptions) returns (Kinova.Api.Common.NotificationHandle);//@RPC_ID=101 @PUB_SUB=OperatingModeNotification
    
    //Subscribes to sequence information notifications
    rpc SequenceInfoTopic (Kinova.Api.Common.NotificationOptions) returns (Kinova.Api.Common.NotificationHandle);//@RPC_ID=102 @PUB_SUB=SequenceInfoNotification
    
    //Subscribes to protection zone notifications
    rpc ProtectionZoneTopic (Kinova.Api.Common.NotificationOptions) returns (Kinova.Api.Common.NotificationHandle);//@RPC_ID=103 @PUB_SUB=ProtectionZoneNotification
    
    //Subscribes to user notifications
    rpc UserTopic (Kinova.Api.Common.NotificationOptions) returns (Kinova.Api.Common.NotificationHandle);//@RPC_ID=104 @PUB_SUB=UserNotification
   
    //Subscribes to controller notifications
    rpc ControllerTopic (Kinova.Api.Common.NotificationOptions) returns (Kinova.Api.Common.NotificationHandle);//@RPC_ID=105 @PUB_SUB=ControllerNotification
    
    //Subscribes to action notifications
    rpc ActionTopic (Kinova.Api.Common.NotificationOptions) returns (Kinova.Api.Common.NotificationHandle);//@RPC_ID=106 @PUB_SUB=ActionNotification
    
    //Subscribes to robot event notifications
    rpc RobotEventTopic (Kinova.Api.Common.NotificationOptions) returns (Kinova.Api.Common.NotificationHandle);//@RPC_ID=107 @PUB_SUB=RobotEventNotification
       
    //Retrieves the forward kinematics that corresponds to specified transformation matrix
    rpc GetFwdKinematics (Kinova.Api.Common.Empty) returns (TransformationMatrix);//@RPC_ID=108
    
    //Reaches the specifed pose
    rpc PlayCartesianTrajectory (ConstrainedPose) returns (Kinova.Api.Common.Empty);//@RPC_ID=109
    
    //Reaches the specified position
    rpc PlayCartesianTrajectoryPosition (ConstrainedPosition) returns (Kinova.Api.Common.Empty);//@RPC_ID=110
    
    //Reaches the specified orientation
    rpc PlayCartesianTrajectoryOrientation (ConstrainedOrientation) returns (Kinova.Api.Common.Empty);//@RPC_ID=111
    
    //Pauses robot movement
    rpc Pause (Kinova.Api.Common.Empty) returns (Kinova.Api.Common.Empty);//@RPC_ID=113
    
    //Resumes robot movement
    rpc Resume (Kinova.Api.Common.Empty) returns (Kinova.Api.Common.Empty);//@RPC_ID=114
    
    //Retrieves the currently measured Pose, that is the position and orientation that the robot is currently in
    rpc GetMeasuredCartesianPose (Kinova.Api.Common.Empty) returns (Pose);//@RPC_ID=115
    
    //Retrieves the commanded cartesian pose
    rpc GetCommandedCartesianPose (Kinova.Api.Common.Empty) returns (Pose);//@RPC_ID=116
    
    //Retrieves the targeted cartesian pose
    rpc GetTargetedCartesianPose (Kinova.Api.Common.Empty) returns (Pose);//@RPC_ID=117
        
    //Sends a twist command
    rpc SendTwistCommand (TwistCommand) returns (Kinova.Api.Common.Empty);//@RPC_ID=121
    
    //Retrieves the currently measured Twist Command, that is the current linear and angular robot velocity
    rpc GetMeasuredTwist (Kinova.Api.Common.Empty) returns (Twist);//@RPC_ID=122
 
    //Retrieves the desired Twist Command
    rpc GetCommandedTwist (Kinova.Api.Common.Empty) returns (Twist);//@RPC_ID=123
    
    //Reaches the specified Joint angles
    rpc PlayJointTrajectory (ConstrainedJointAngles) returns (Kinova.Api.Common.Empty);//@RPC_ID=124
    
    //Reaches the specified Joint angle
    rpc PlaySelectedJointTrajectory (ConstrainedJointAngle) returns (Kinova.Api.Common.Empty);//@RPC_ID=125
    
    //Retrieves the currently measured joint angles, that is the current position of each joint
    rpc GetMeasuredJointAngles (Kinova.Api.Common.Empty) returns (JointAngles);//@RPC_ID=126
 
    //Retrieves the desired Joint angles Command
    rpc GetCommandedJointAngles (Kinova.Api.Common.Empty) returns (JointAngles);//@RPC_ID=127
        
    //Sends a joint speed command
    rpc SendJointSpeedsCommmand (JointSpeeds) returns (Kinova.Api.Common.Empty);//@RPC_ID=132
    
    //Sends a speed command for a specific joint
    rpc SendSelectedJointSpeedCommand (JointSpeed) returns (Kinova.Api.Common.Empty);//@RPC_ID=133
    
    //Retrieves the currently measured Joint speeds Command, that is the current speed of each joint
    rpc GetMeasuredJointSpeeds (Kinova.Api.Common.Empty) returns (JointSpeeds);//@RPC_ID=134
 
    //Retrieves the desired Joint speeds Command
    rpc GetCommandedJointSpeeds (Kinova.Api.Common.Empty) returns (JointSpeeds);//@RPC_ID=135
    
    //Sends a command to move the gripper
    rpc SendGripperCommand (GripperCommand) returns (Kinova.Api.Common.Empty);//@RPC_ID=136
    
    //Retrieves the current gripper movement, that is the current gripper position, force or speed
    rpc GetMeasuredGripperMovement (GripperRequest) returns (Gripper);//@RPC_ID=137
 
    //Retrieves the desired gripper Command
    rpc GetCommandedGripperMovement (GripperRequest) returns (Gripper);//@RPC_ID=138
    
    //Sets the robot in admittance mode
    rpc SetAdmittance (Admittance) returns (Kinova.Api.Common.Empty);//@RPC_ID=139

    //Defines the reference frame to use with Twist and Wrench commands
    rpc SetTwistWrenchReferenceFrame (CartesianReferenceFrameRequest) returns (Kinova.Api.Common.Empty);//@RPC_ID=140

    //sets a new operating mode. Only Maintenance, Update and Run mode are permitted
    rpc SetOperatingMode (OperatingModeInformation) returns (Kinova.Api.Common.Empty);//@RPC_ID=141
       
    //stops robot movement
    rpc ApplyEmergencyStop (Kinova.Api.Common.Empty) returns (Kinova.Api.Common.Empty);//@RPC_ID=145
    
    //resets robot stop. Robot is now permitted to move again
    rpc ClearFaults (Kinova.Api.Common.Empty) returns (Kinova.Api.Common.Empty);//@RPC_ID=146
        
    //retrieves currently active map associate to specified mapping.
    rpc GetActiveMap (MappingHandle) returns (Kinova.Api.Common.Empty);//@RPC_ID=149

    //retrieves current control mode
    rpc GetControlMode (Kinova.Api.Common.Empty) returns (ControlModeInformation);//@RPC_ID=150
    
    //retreieves current operating mode
    rpc GetOperatingMode (Kinova.Api.Common.Empty) returns (OperatingModeInformation);//@RPC_ID=151
 
    //sets the servoing mode    
    rpc SetServoingMode (ServoingModeInformation) returns (Kinova.Api.Common.Empty);//@RPC_ID=152
    
    //retrieves current servoing mode
    rpc GetServoingMode (Kinova.Api.Common.Empty) returns (ServoingModeInformation);//@RPC_ID=153
    
    //Subscribes to servoing mode notifications
    rpc ServoingModeTopic (Kinova.Api.Common.NotificationOptions) returns (Kinova.Api.Common.NotificationHandle);//@RPC_ID=154 @PUB_SUB=ServoingModeNotification
      
    //retrieves the last sequence state
    rpc GetSequenceState (SequenceHandle) returns (SequenceInformation);//@RPC_ID=156
    
    //retrieves the last state of the robot versus the specified protection zone
    rpc GetProtectionZoneState (ProtectionZoneHandle) returns (ProtectionZoneInformation);//@RPC_ID=157
    
    //retrieves the action execution state
    rpc GetActionExecutionState (Kinova.Api.Common.Empty) returns (ActionExecutionState);//@RPC_ID=158
      
    //Deletes all configuration and put back factory content only (except Network settings)
    rpc RestoreFactorySettings (Kinova.Api.Common.Empty) returns (Kinova.Api.Common.Empty);//@RPC_ID=160
    
    //Puts back Network settings to their factory defaults and predefined users to default password
    rpc RestoreNetworkFactorySettings (Kinova.Api.Common.Empty) returns (Kinova.Api.Common.Empty);//@RPC_ID=161

    //allows to reboot robot
    rpc Reboot (Kinova.Api.Common.Empty) returns (Kinova.Api.Common.Empty);//@RPC_ID=162
    
    //Subscribes to factory notifications
    rpc FactoryTopic (Kinova.Api.Common.NotificationOptions) returns (Kinova.Api.Common.NotificationHandle);//@RPC_ID=164 @PUB_SUB=FactoryNotification
       
    //Retrieves the list of all connected controllers 
    rpc GetAllConnectedControllers (Kinova.Api.Common.Empty) returns (ControllerList);//@RPC_ID=166
    
    //retrieves the state of a specific controller 
    rpc GetControllerState (ControllerHandle) returns (ControllerState);//@RPC_ID=167

    //Retrieves the number of Actuators
    rpc GetActuatorCount (Kinova.Api.Common.Empty) returns (ActuatorInformation);//@RPC_ID=171

    //Initiates wifi scanning
    rpc StartWifiScan (Kinova.Api.Common.Empty) returns (Kinova.Api.Common.Empty);//@RPC_ID=172
	
    //Retrieves a configured Wifi network
    rpc GetConfiguredWifi (Ssid) returns (WifiConfiguration);//@RPC_ID=173
    
    //Subscribes to network event notifications
    rpc NetworkTopic (Kinova.Api.Common.NotificationOptions) returns (Kinova.Api.Common.NotificationHandle);//@RPC_ID=174 @PUB_SUB=NetworkNotification

    //Retrieves current arm state
    rpc GetArmState (Kinova.Api.Common.Empty) returns (ArmStateInformation);//@RPC_ID=175

    //Subscribes to arm state notifications
    rpc ArmStateTopic (Kinova.Api.Common.NotificationOptions) returns (Kinova.Api.Common.NotificationHandle);//@RPC_ID=176 @PUB_SUB=ArmStateNotification

    //Retrieves the IPv4 network information for the specified Network adapter
    rpc GetIPv4Information (NetworkHandle) returns (IPv4Information);//@RPC_ID=177
}

enum ServiceVersion {
    RESERVED_0 = 0;
    CURRENT_VERSION = 1;  // Current Version
}

/**
 * Message used to create a new User Profile in robot
 */ 
message FullUserProfile { 
    UserProfile user_profile = 1; //User Profile, which includes username
    string password = 2; //User's password
}

/**
 * Information about a user
 */
message UserProfile {
    Kinova.Api.Common.UserProfileHandle handle = 1; //User handle (no need to set it with CreateUserProfile()
    string username = 2; // username, which is used to connect to robot (or login via Web App)
    string firstname = 3; //user first name
    string lastname = 4; //user last name
    string application_data = 5; //other application data (used by Web App)
}

/**
 * List of user profiles
 */
message UserProfileList {
    repeated UserProfile user_profiles = 1;  //user profiles
}

/**
 * Message used to retrieve a list of users along with their username
 */
message UserList {
    repeated Kinova.Api.Common.UserProfileHandle user_handles = 1; //user handles
}

/**
 * Message used to change a User's password
 */
message PasswordChange {
    Kinova.Api.Common.UserProfileHandle handle = 1;   // user handle
    string old_password = 2; // current user's password
    string new_password = 3; // new user's password
}

/**
 * Handle to an existing Sequence
 */
message SequenceHandle {
    uint32 identifier = 1; //sequence identifier
    fixed32 permission = 2; //must use 'Permission' enum
} 

/**
 * Message used to pass options when executing a sequence
 */
message AdvancedSequenceHandle {
    SequenceHandle handle = 1; // sequence handle
    /**
     * set to true to play the sequence in loop, false otherwise. When a sequence is executed in loop, it will automatically 
     * go back to first task within the sequence after completing execution of last task and continue execution forever 
     * unless the sequence is explicitely stopped
     */
    bool in_loop = 2;
}

/**
 * Message used to delete a specific task within a sequence
 */
message SequenceTaskHandle {
    SequenceHandle sequence_handle = 1; // sequence handle
    uint32 task_index = 2; //specified task to delete within sequence
}
 
/**
 * Definition of a specific task within a sequence
 */ 
message SequenceTask {
    uint32 group_identifier = 1; //specifies the order in which this task must be executed
    Action action = 2; 
    string application_data = 3; //application data (used by Web App)
}

/**
 * Sequence definition
 */
message Sequence {
    SequenceHandle handle = 1; //sequence handle
    string name = 2; //sequence name
    string application_data = 3; // application data (used by Web App)
    repeated SequenceTask tasks = 4; // list of tasks that this sequence contains
}

/**
 * List of sequences
 */
message SequenceList {
    repeated Sequence sequence_list = 1;  //sequences
}

//action to append an action to an existing trajectory (which can be already playing)
message AppendActionInformation {
    SequenceHandle sequence_handle = 1;
    Action action = 2;
}

/**
 * Action handle
 */
message ActionHandle {
    uint32 identifier = 1;    
    ActionType action_type = 2; //allows to know the type of action that is affected (ex. on a notification)
    fixed32 permission = 3; //must use 'Permission' enum
} 

message RequestedActionType {
    ActionType action_type = 1; 
}

/**
 * Definition of an Action
 */ 
message Action {    
    ActionHandle handle = 1; // action handle (useful when updating an existing action)
    string name = 2; // action friendly name
    string application_data = 3; // application data (used by Web App)
    oneof action_parameters {
        TwistCommand send_twist_command = 4;                            //action to control the robot in velocity
        JointSpeeds send_joint_speeds = 7;                              //action to control each joint speed
        ConstrainedPose reach_pose = 9;                                 //action to reach a pose
        ConstrainedJointAngles reach_joint_angles = 10;                 //action to reach a joint angles 
        AdmittanceMode toggle_admittance_mode = 16;                     //action to enable or disable the admittance mode
        SwitchControlMapping switch_control_mapping = 19;               //action to switch the active controller map
        JointNavigationDirection navigate_joints = 20;                  //action to select the next actuator to control in a map
        NavigationDirection navigate_mappings = 21;                     //action to select a different map
        ChangeTwist change_twist = 25;                                  //action to change twist
        ChangeJointSpeeds change_joint_speeds = 26;                     //action to change the joint speeds per joint
        EmergencyStop apply_emergency_stop = 31;                        //action to apply robot emergency stop
        Faults clear_faults = 32;                                       //action to clear faults. robot will be able to move is no more error safeties 
        Delay delay = 34;                                               //action to apply a delay      
        ActionHandle execute_action = 35;                               //action to execute an existing action
        GripperCommand send_gripper_command = 36;                       //action to execute a gripper movement
        Stop stop_action = 38;                                          //action to stop movement
    }
}

/**
 * List of all supported action types
 */ 
enum ActionType {
    UNSPECIFIED_ACTION = 0;  //unspecified action type
    SEND_TWIST_COMMAND = 1; //action to control the robot in velocity
    SEND_JOINT_SPEEDS = 4; //action to control each joint speed
    REACH_POSE = 6; //action to reach a pose
    REACH_JOINT_ANGLES = 7; //action to reach a joint angles 
    TOGGLE_ADMITTANCE_MODE = 13; //action to enable or disable the admittance mode
    SWITCH_CONTROL_MAPPING = 16; //action to switch the active controller map
    NAVIGATE_JOINTS = 17; //action to select the next actuator to control from control mapping
    NAVIGATE_MAPPINGS = 18; //action to select a different map
    CHANGE_TWIST = 22; //action to change the twist
    CHANGE_JOINT_SPEEDS = 23; //action to change the joint speeds per joint
    APPLY_EMERGENCY_STOP = 28; //action to apply robot emergency stop
    CLEAR_FAULTS = 29; //action to clear faults. robot will be able to move is no more error safeties 
    DELAY = 31; //action to apply a delay 
    EXECUTE_ACTION = 32; //action to execute an existing action
    SEND_GRIPPER_COMMAND = 33; //action to execute a gripper command
    STOP_ACTION = 35; // action to stop movement
}

//action to switch the active controller map
message SwitchControlMapping {
    uint32 controller_identifier = 1;    
    MapGroupHandle map_group_handle = 2;
    MapHandle map_handle = 3;
}

//action to change the maximum cartesian velocity
message ChangeTwist {
    float linear = 1;
    float angular = 2;
}

//action to change the maximum angular velocity per joint
message ChangeJointSpeeds {
   JointSpeeds joint_speeds = 1;
}

//action to apply robot emergency stop
message EmergencyStop {
}

//Faults message
message Faults {
}

//action to apply a delay
message Delay {
    uint32 duration = 1;
}

//action to stop movement
message Stop {
}

/**
 * List of actions
 */
message ActionList {
    repeated Action action_list = 1;
}

/**
 * Message to specify a timeout
 */
message Timeout {
    uint32 value = 1; //timeout value
}  

/**
 * Ssid handle
 */ 
message Ssid {
    string identifier = 1; //SSID value
}

/**
 * Message to enable (or disable) a specific communication interface
 */ 
message CommunicationInterfaceConfiguration {
    NetworkType type = 1;  //network type
    bool enable = 2; //true if network is enabled, false otherwise
}

/**
 * Message to identify the type of network
 */ 
enum NetworkType {
    UNSPECIFIED_NETWORK_TYPE = 0; //unspecified network type
    WIFI = 1;  //Wifi network
    WIRED_ETHERNET = 2; //wired Ethernet network
}

/**
 * Network handle
 */  
message NetworkHandle {
    NetworkType type = 1;  //network type
}

/**
 * IPv4 configuration
 */  
message IPv4Configuration {
    uint32 ip_address = 1;  //IPv4 address
    uint32 subnet_mask = 2;  //IPv4 subnet mask
    uint32 default_gateway = 3; //Gateway IPv4 address
    bool dhcp_enabled = 4; //set to true to use dhcp instead of static ip configuration
}

/**
 * IPv4 information
 */  
message IPv4Information {
    uint32 ip_address = 1;  //IPv4 address
    uint32 subnet_mask = 2;  //IPv4 subnet mask
    uint32 default_gateway = 3; //Gateway IPv4 address
}

/**
 * Message to specify the IPv4 configuration for a specific type of network
 */
message FullIPv4Configuration {
 
    NetworkHandle handle = 1; //network handle
    IPv4Configuration ipv4_configuration = 2; //IPv4 configuration  
}


/**
 * Wifi Security type
 */
enum WifiSecurityType {
    UNSPECIFIED_AUTHENTICATION = 0; //unspecified wifi security type

    WEP = 1; //WEP authentication required
    WPA2_PERSONAL = 2; //WPA2 Personal authentication required
    WPA_PERSONAL = 4; //WPA Personal authentication required
    NO_AUTHENTICATION = 8;  //no authentication required
}

/**
 * Wifi encryption type
 */
enum WifiEncryptionType {

    UNSPECIFIED_ENCRYPTION = 0; //unspecified wifi encryption type
    AES_ENCRYPTION = 1; //AES encryption
    TKIP_ENCRYPTION = 2; // TKIP encryption
    WEP_ENCRYPTION = 4; //WEP encryption
}

/**
 * Signal quality
 */
enum SignalQuality {
 
    UNSPECIFIED_SIGNAL_QUALITY = 0; //unspecified signal quality
    POOR = 1; //Poor signal quality
    FAIR = 2; //Fair signal quality
    GOOD = 3; //Good signal quality
    EXCELLENT = 4; //Excellent signal quality
    NONE = 5; //No signal
}

/**
 * Message to provide Information about a specific Wifi network
 */ 
message WifiInformation {
    Ssid ssid = 1; //SSID
    fixed32 security_type = 2; //Wifi Security type
    fixed32 encryption_type = 3; //Wifi Encryption type
    SignalQuality signal_quality = 4; //Wifi signal quality
    int32 signal_strength = 5; //Wifi signal power in dBm
    uint32 frequency = 6; //Wifi operating frequency (channel) in MHz
    uint32 channel = 7; //Wifi operating channel
}

/**
 * Wifi information list
 */
message WifiInformationList {
    repeated WifiInformation wifi_information_list = 1; //wifi informations
}

/**
 * Wifi Configuration
 */ 
message WifiConfiguration {
    Ssid ssid = 1; // SSID
    string security_key = 2; //security key to used when connecting to Wifi network
    bool connect_automatically = 3; //set to true so robot automatically connects to this Wifi network at bootup, false otherwise
}

/**
 * Wifi configuration list
 */
message WifiConfigurationList {
    repeated WifiConfiguration wifi_configuration_list   = 1; //wifi configurations
}

/**
 * Protection zone handle
 */
message ProtectionZoneHandle {
    uint32 identifier = 1;  //protection zone identifier
    fixed32 permission = 2; //must use 'Permission' enum
} 

/**
 * Single rotation matrix row
 */ 
message RotationMatrixRow {
    float column1 = 1;
    float column2 = 2; 
    float column3 = 3;
}

/**
 * 3x3 rotation matrix
 */
message RotationMatrix {
    RotationMatrixRow row1 = 1; //first rotation matrix row
    RotationMatrixRow row2 = 2; //
    RotationMatrixRow row3 = 3;
}

/**
 * Cartesian point
 */
message Point {
    float x = 1;  //x
    float y = 2;  //y
    float z = 3;  //z
}

/**
 * List of Protection zone shape types
 */
enum ShapeType {
    UNSPECIFIED_SHAPE = 0; //unspecified shape type
    CYLINDER = 1;
    SPHERE = 2;
    RECTANGULAR_PRISM = 3;    
}

/**
 * Protection zone shape
 */
message ZoneShape {
    ShapeType shape_type = 1; //shape type
    Point origin = 2; //origin of the protection zone shape from reference
    RotationMatrix orientation = 3; //rotation matrix to provide shape orientation
    repeated float dimensions = 4; //shape size measurement. if rectangular prism: x, y and z dimensions. if cylinder: radius and height. if sphere: radius
    float envelope_thickness = 5; //thickness of envelop around shape. The envelop is of same shape type as the shape at its center
}

/**
 * Protection zone configuration
 */
message ProtectionZone {
    ProtectionZoneHandle handle = 1; //protection zone handle
    string name = 2; //protection zone friendly name
    string application_data = 3; //application data (used by Web App)
    bool is_enabled = 4; //true if protection zone is enabled, false otherwise
    ZoneShape shape = 5; //protection zone shape
    repeated CartesianLimitation limitations = 6;  //list of cartesian limitation (i.e. force)
    repeated CartesianLimitation envelope_limitations = 7; //list of cartesian limitation of the envelop (i.e. velocity and force)
}

/**
 * list of protection zones
 */
message ProtectionZoneList {
    repeated ProtectionZone protection_zones = 1; //protection zones
}

/**
 * List of limitation types
 */
enum LimitationType {
    UNSPECIFIED_LIMITATION = 0; //unspecified limitation
    FORCE_LIMITATION = 1; //force limitation
    ACCELERATION_LIMITATION = 2; //acceleration limitation
    VELOCITY_LIMITATION = 3; //velocity limitation
}


/**
 * Limitation identifier
 */
message LimitationTypeIdentifier { 
    LimitationType type = 1; //limitation type
}

/**
 * Cartesian limitation configuration
 */ 
message CartesianLimitation {
    LimitationType type = 1; //limitation type
    float translation = 2; //translation limitation
    float orientation = 3; //orientation limitation
}  

/**
 * List of cartesian limitations
 */
message CartesianLimitationList {
    repeated CartesianLimitation limitations = 1; //limitations
}

/**
 * Joint limitation
 */
message JointLimitationValue {
    LimitationType type = 1;  //limitation type
    float value = 2; //limitation value
}

/**
 * List of joint limitations
 */
message JointLimitationValueList {
    repeated JointLimitationValue joint_limitation_values = 1; //joint limitations
}

/**
 * Joint limitation
 */
message JointLimitation {
    uint32 device_identifier = 1; //joint device identifier
    JointLimitationValue limitation_value = 2; //joint limitation value
}

/**
 * message to specify a specific limitation type for a specific joint
 */
message JointLimitationTypeIdentifier {
    uint32 device_identifier = 1; //joint device identifier 
    LimitationType type = 2; //joint limitation type
}

/**
 * Message to specify the parameters of a a event log query
 */
message Query {
    Kinova.Api.Common.Timestamp start_timestamp = 1;  //start timestamp (set to zero to specify it)
    Kinova.Api.Common.Timestamp end_timestamp = 2; //end timestamp (set to zero to not specify it)
    string username = 3; //queried username (set to "" to not specify it)
}

/**
  * Configuration events
 */
enum ConfigurationNotificationEvent {
 
    UNSPECIFIED_CONFIGURATION_EVENT = 0; //unspecified configuration event
    UPDATE = 1; //delete configuration
    DELETE = 2; //update configuration
    DELETE_ALL = 3; //delete all configuration
    CREATE = 4; //create configuration
}

/**
  * Message that contains a Configuration change event
 */
message ConfigurationChangeNotification {
    ConfigurationNotificationEvent event = 1; //configuration event
    Kinova.Api.Common.Timestamp timestamp = 2; //event timestamp
    Kinova.Api.Common.UserProfileHandle user_handle = 3; //user that caused the configuration event
    oneof configuration_change {
        SequenceHandle sequence_handle = 4;
        ActionHandle action_handle = 5;
        MappingHandle mapping_handle = 6;
        MapGroupHandle map_group_handle = 7;
        MapHandle map_handle = 8;
        Kinova.Api.Common.UserProfileHandle user_profile_handle = 9;
        ProtectionZoneHandle protection_zone_handle = 10;
        Kinova.Api.Common.SafetyHandle safety_handle = 11;
        NetworkHandle network_handle = 12;
        Ssid ssid = 14;
    }
    Kinova.Api.Common.Connection connection = 15; // connection that caused the configuration event
}

/**
  * Message that contains a Mapping information event
 */
message MappingInfoNotification {
    uint32 controller_identifier = 1; //identifier of the controller 
    MapHandle active_map_handle = 2;
    Kinova.Api.Common.Timestamp timestamp = 3; //event timestamp
    Kinova.Api.Common.UserProfileHandle user_handle = 4; //user that caused the mapping information event
    Kinova.Api.Common.Connection connection = 5; // connection that caused the mapping information event
}

/**
  * list of possible robot control modes
 */
enum ControlMode {
    UNSPECIFIED_CONTROL_MODE = 0; //unspecified control mode
    ANGULAR_JOYSTICK = 1; //angular joystick mode
    CARTESIAN_JOYSTICK = 2; //cartesian joystick mode
    VISION_JOYSTICK = 3; //vision joystick mode
    ANGULAR_TRAJECTORY = 4; //angular trajectory mode
    CARTESIAN_TRAJECTORY = 5; //cartesian trajectory mode
    CARTESIAN_ADMITTANCE = 6; //cartesian admittance mode
    JOINT_ADMITTANCE = 7; //joint admittance mode
    NULL_SPACE_ADMITTANCE = 8; //null space mode
    IDLE = 13; //Idle    
};

message ControlModeInformation {
    ControlMode mode = 1;
}

/**
  * Message that contains a Control mode event
 */
message ControlModeNotification {
    ControlMode control_mode = 1; //new control mode
    Kinova.Api.Common.Timestamp timestamp = 2; //event timestamp
    Kinova.Api.Common.UserProfileHandle user_handle = 3; //user that caused the control mode event
    Kinova.Api.Common.Connection connection = 4; // connection that caused the control mode event
}

/**
  * list of robot operating modes which are used to manage robot firmware upgrade
 */
enum OperatingMode {
    UNSPECIFIED_OPERATING_MODE = 0; //unspecified operating mode
    MAINTENANCE_MODE = 1; //robot in maintenance mode
    UPDATE_MODE = 2; //robot waiting for upgrade package
    UPDATE_COMPLETED_MODE = 3; //robot update successfully completed
    UPDATE_FAILED_MODE = 4; //robot update failed
    SHUTTING_DOWN_MODE = 5; //robot about to shutdown
    RUN_MODE = 6; //robot properly running (or normal operation mode)
    UPDATING_DEVICE_MODE = 7; //robot updating device
}

// enum used to configure the servoing mode
enum ServoingMode {
    UNSPECIFIED_SERVOING_MODE = 0; //unspecified servoing mode
    MULTI_LEVEL_SERVOING = 1; //multi-level servoing
    SINGLE_LEVEL_SERVOING = 2; //single-level servoing
    LOW_LEVEL_SERVOING = 3; //low-level servoing
    BYPASS_SERVOING = 4; //bypass mode
}

message ServoingModeInformation {
    ServoingMode servoing_mode = 1;
}

message OperatingModeInformation {
    OperatingMode operating_mode = 1; //operating mode
    Kinova.Api.Common.DeviceHandle device_handle = 2; //device matching operating mode (if applicable)
}

/**
  * Message that contains Operating mode event
 */
message OperatingModeNotification {
    OperatingMode operating_mode = 1; //new operating mode
    Kinova.Api.Common.Timestamp timestamp = 2; //event timestamp
    Kinova.Api.Common.UserProfileHandle user_handle = 3; //user that caused the Operating mode event
    Kinova.Api.Common.Connection connection = 4; // connection that caused the Operating mode event
    Kinova.Api.Common.DeviceHandle device_handle = 5; //device matching operating mode (if applicable)
}

/**
  * Message that contains Servoing mode event
 */
message ServoingModeNotification {
    ServoingMode servoing_mode = 1; //new operating mode
    Kinova.Api.Common.Timestamp timestamp = 2; //event timestamp
    Kinova.Api.Common.UserProfileHandle user_handle = 3; //user that caused the Operating mode event
    Kinova.Api.Common.Connection connection = 4; // connection that caused the Servoing mode event        
}

/**
  * list of possible sequence event types
 */
enum EventIdSequenceInfoNotification {
 
    UNSPECIFIED_SEQUENCE_EVENT = 0; //unspecified sequence event
    END = 1;   //sequence end reached
    ABORT = 2; //sequence aborted     
    PAUSE = 3; //sequence paused
    TASK_START = 4; //sequence task started
    TASK_END = 5; //sequence task ended   
    START = 6; //sequence started
}

/**
  * Message that contains Sequence information event
 */
message SequenceInfoNotification {
    EventIdSequenceInfoNotification event_identifier = 1; //sequence event type
    SequenceHandle sequence_handle = 2;
    uint32 task_index = 3; //task index
    uint32 group_identifier = 4; //specifies the order in which this task must be executed
    Kinova.Api.Common.Timestamp timestamp = 5; //event timestamp
    Kinova.Api.Common.UserProfileHandle user_handle = 6; //user that caused the sequence event
    SubErrorCodes abort_details = 7; //details if event_identifier is equal to ABORT
    Kinova.Api.Common.Connection connection = 8; // connection that caused the sequence event            
}


message SequenceInformation {
    EventIdSequenceInfoNotification event_identifier = 1; //sequence event type
    uint32 task_index = 2;  //task index
    uint32 task_identifier = 3; //task identifier 
}

/**
  * list of protection zone event types
 */
enum ProtectionZoneEvent {
    UNSPECIFIED_PROTECTION_ZONE_EVENT = 0;
                                                 
    REACHED = 1; //protection zone limit is reached
    ENTERED = 2; //protection zone limit is entered
    EXITED = 3; //protection zone limit is exited
};

/**
  * Message that contains a protection zone event
 */
message ProtectionZoneNotification {
    ProtectionZoneEvent event = 1; //event type
    ProtectionZoneHandle handle = 2;
    Kinova.Api.Common.Timestamp timestamp = 3; //event timestamp
    Kinova.Api.Common.UserProfileHandle user_handle = 4; //user that caused the protection zone event to occur
    Kinova.Api.Common.Connection connection = 5; // connection that caused the protection zone event to occur
}

message ProtectionZoneInformation {
    ProtectionZoneEvent event = 1; //event type
}

/**
  * List of User event types
 */
enum UserEvent {
    UNSPECIFIED_USER_EVENT = 0; //unspecified user event
    LOGGED_OUT = 1; //user logged out
    LOGGED_IN = 2; //user logged in
};

/**
  * Message that contains a User event
 */
message UserNotification {
    UserEvent user_event = 1; //user event type
    Kinova.Api.Common.UserProfileHandle modified_user = 2; //user profile that was modified
    Kinova.Api.Common.Timestamp timestamp = 3; //event timestamp
    Kinova.Api.Common.UserProfileHandle user_handle = 4; //user that caused the user profile event (i.e.  user who changed the user profile)
    Kinova.Api.Common.Connection connection = 5; // connection that caused the user profile event (i.e.  user who changed the user profile)
}

/**
 * List of possible controller types
 */
enum ControllerType {
    UNSPECIFIED_CONTROLLER_TYPE = 0; //unspecified controller type
    XBOX_CONTROLLER = 1; //XBOX controller
    WRIST_CONTROLLER = 2; //Wrist controller on Kinova Arm
}

/**
 * Handle on a specific controller
 */
message ControllerHandle {
    ControllerType type = 1; //controller type
    uint32 controller_identifier = 2; //controller identifier
}

/**
 * Handle on a specific button (or axis) of a controller
 */
message ControllerElementHandle {
    ControllerHandle controller_handle = 1; //controller handle
    oneof identifier {
        uint32 button = 2; //button identifier (only set if 'button' controller event, otherwise zero)
        uint32 axis = 3; //axis identifier (only set if 'axis' controller event, otherwise zero)
    }
}

/**
  * Message that contains controller event
 */
message ControllerNotification {
    
    oneof state {
        ControllerState controller_state = 1;
        ControllerElementState controller_element = 2;
    }
    
    Kinova.Api.Common.Timestamp timestamp = 3; //event timestamp
    Kinova.Api.Common.UserProfileHandle user_handle = 4; //user that caused the controller event
    Kinova.Api.Common.Connection connection = 5; // connection that caused the controller event
}

/**
 * Message that allows to retrieve a list of controller handles
 */
message ControllerList {
    repeated ControllerHandle handles = 1;
}

message ControllerState {
    ControllerHandle handle = 1; 
    ControllerEventType event_type = 2;
}

message ControllerElementState {
    ControllerElementHandle handle = 1; //controller element
    ControllerElementEventType event_type = 2;
    float axis_value = 3; //axis value (set between -1.0 and +1.0); only set if 'axis' controller element, otherwise zero
}

/**
 * Controller event type
 */
enum ControllerEventType { 
    UNSPECIFIED_CONTROLLER_EVENT = 0; //unspecified controller event
    CONTROLLER_DISCONNECTED = 1; //controller was disconnected
    CONTROLLER_CONNECTED = 2; //controler was connected
}


/*
 * Controller element event type
 */
enum ControllerElementEventType { 
    UNSPECIFIED_CONTROLLER_ELEMENT_EVENT = 0; //unspecified controller element event
    AXIS_MOVED = 1; //controller axis moved
    BUTTON_DOWN = 2; //controller button pressed
    BUTTON_UP = 3; //controller button released
}



/**
 * Action event type
 */
enum ActionEvent {
    UNSPECIFIED_ACTION_EVENT = 0; //unspecified action event
    ACTION_END = 1; //Action execution end reached
    ACTION_ABORT = 2; //Action execution aborted
    ACTION_PAUSE = 3; //Action execution paused
    ACTION_START = 4; //Action execution started
}

/**
 * Message that contains an Action event
 */
message ActionNotification {
    ActionEvent action_event = 1; //Action event type
    ActionHandle handle = 2;
    Kinova.Api.Common.Timestamp timestamp = 3; //event timestamp
    Kinova.Api.Common.UserProfileHandle user_handle = 4; //user that caused the action event
    SubErrorCodes abort_details = 5; //details if action_event is equal to ACTION_ABORT
    Kinova.Api.Common.Connection connection = 6; // connection that caused the action event
    
}

message ActionExecutionState {
    ActionEvent action_event = 1; //Action event type
    ActionHandle handle = 2;
}

/**
 * list of robot events
 */
enum RobotEvent {
 
    UNSPECIFIED_ROBOT_EVENT = 0;  //unspecified robot event
    ARM_CONNECTED = 1; //arm connected
    ARM_DISCONNECTED = 2; //arm disconnected
    TOOL_CONNECTED = 5; //tool connected to the end effector
    TOOL_DISCONNECTED = 6; //tool disconnected from end effector
}

/**
 * Message that contains robot event
 */
message RobotEventNotification {
    RobotEvent event = 1;  //robot event type
    Kinova.Api.Common.DeviceHandle handle = 2; //identifier of the hardware device connected or disconnected
    Kinova.Api.Common.Timestamp timestamp = 3; //event timestamp
    Kinova.Api.Common.UserProfileHandle user_handle = 4; //user that caused the robot event to occur
    Kinova.Api.Common.Connection connection = 6; // connection that caused the robot event to occur
}

/**
 * list of backup events
 */
enum BackupEvent { 
    UNSPECIFIED_BACKUP_EVENT = 0;  //unspecified backup event
    BACKUP_RESTORED = 1; //configuration backup restored
    BACKUP_UPLOADED = 2; //configuration backup uploaded on robot
}

/**
 * list of factory events
 */
enum FactoryEvent { 
    UNSPECIFIED_FACTORY_EVENT = 0;          //unspecified factory event
    FACTORY_DEFAULT_RESTORED = 1;           // factory defaults restored on robot
    NETWORK_FACTORY_DEFAULT_RESTORED = 2;   //network factory defaults restored on robot
}

/**
 * Message that contains a factory event
 */
message FactoryNotification {
    FactoryEvent event = 1;
    Kinova.Api.Common.Timestamp timestamp = 2; //event timestamp
    Kinova.Api.Common.UserProfileHandle user_handle = 3; //user that caused the factory event to occur
    Kinova.Api.Common.Connection connection = 4; // connection that caused the factory event to occur
}

/**
 * list of network events
 */
enum NetworkEvent { 
    UNSPECIFIED_NETWORK_EVENT = 0;          //unspecified network event
    WIFI_CONNECTED = 1;                     //WiFi connected
    WIFI_DISCONNECTED = 2;                  //Wifi Disconnected
    WIFI_SCAN_STARTED = 3;                  //Wifi scan was initiated
    WIFI_SCAN_RESULTS = 4;                  //Wifi scan results are available
    WIFI_SCAN_FAILED = 5;                   //Wifi scan failed
    WIFI_NOT_FOUND = 6;                     //Wifi selected network not found
    WIFI_ASSOC_REJECTED = 7;                //Wifi AP rejected association
    WIFI_AUTH_WRONG_KEY = 8;                //Wifi wrong PSK supplied
    WIFI_AUTH_CONN_FAILED = 9;              //Wifi connection failure during auth
    WIFI_AUTH_FAILED = 10;                  //Wifi authentication failure
}

/**
 * Message that contains a network event
 */
message NetworkNotification {
    NetworkEvent event = 1;
    Kinova.Api.Common.Timestamp timestamp = 2; //event timestamp
    Kinova.Api.Common.UserProfileHandle user_handle = 3; //user that caused the network event to occur
    Kinova.Api.Common.Connection connection = 4; // connection that caused the network event to occur
}

/**
 * list of configuration change notifications
 */
message ConfigurationChangeNotificationList {
    repeated ConfigurationChangeNotification notifications = 1; //notifications
}

/**
 * list of Mapping information notifications
 */
message MappingInfoNotificationList {
    repeated MappingInfoNotification notifications = 1; //notifications
}

/**
 * list of Control mode notifications
 */
message ControlModeNotificationList {
    repeated ControlModeNotification notifications = 1; //notifications
}

/**
 * list of Operating mode notifications
 */
message OperatingModeNotificationList {
    repeated OperatingModeNotification notifications = 1; //notifications
}

/**
 * list of Servoing mode notifications
 */
message ServoingModeNotificationList {
    repeated ServoingModeNotification notifications = 1; //notifications
}

/**
 * list of Sequence information notifications
 */    
message SequenceInfoNotificationList {    
    repeated SequenceInfoNotification notifications = 1; //notifications
}

/**
 * list of Protection zone notifications
 */
message ProtectionZoneNotificationList {
    repeated ProtectionZoneNotification notifications = 1; //notifications
}

/**
 * list of User notifications
 */
message UserNotificationList {
    repeated UserNotification notifications = 1; //notifications
}

/**
 * list of safety notifications
 */
message SafetyNotificationList {
    repeated Kinova.Api.Common.SafetyNotification notifications = 1; //notifications
}

/**
 * list of controller notifications
 */   
message ControllerNotificationList {
    repeated ControllerNotification notifications = 1; //notifications
}

/**
 * list of Action notifications
 */
message ActionNotificationList {
    repeated ActionNotification notifications = 1; //notifications
}

/**
 * list of Robot event notifications
 */
message RobotEventNotificationList {
    repeated RobotEventNotification notifications = 1; //notifications
}

/**
 * list of Network event notifications
 */
message NetworkNotificationList {
    repeated NetworkNotification notifications = 1; //notifications
}

/**
 * Mapping handle
 */
message MappingHandle {
    uint32 identifier = 1; //mapping identifier
    fixed32 permission = 2; //must use 'Permission' enum
} 

/**
 * list of possible controller input types
 */
enum ControllerInputType {
    UNSPECIFIED_CONTROLLER_INPUT_TYPE = 0;
    ANALOG = 1; //axis
    DIGITAL = 2; //button
}

/**
 * List of possible controller input behaviors
 */
enum ControllerBehavior {
    UNSPECIFIED_CONTROLLER_BEHAVIOR = 0;
    CONTROLLER_BUTTON_DOWN = 1; //pushing button down
    CONTROLLER_BUTTON_UP = 2; //releasing button
    CONTROLLER_AXIS_POSITIVE = 3; //positive axis movement
    CONTROLLER_AXIS_NEGATIVE = 4; //negative axis movement
    CONTROLLER_BUTTON_CLICK = 5; //button down and up within X msec
}

message SafetyEvent {
    Kinova.Api.Common.SafetyHandle safety_handle = 1;
}

message ControllerEvent {
    ControllerInputType input_type = 1;
    ControllerBehavior behavior = 2;
    uint32 input_identifier = 3;
}

message GpioEvent {
    GpioState gpio_state = 1;
    uint32 device_identifier = 2;
} 

/**
 * List of Map events
 */ 
message MapEvent {    
    oneof events {
        SafetyEvent safety_event = 1;
        GpioEvent gpio_event = 2;
        ControllerEvent controller_event = 3;
    }
    string name = 4;//event friendly name
}

/**
 * message to associate an event to an action
 */ 
message MapElement {
    MapEvent event = 1;
    Action action = 2;
}

message ActivateMapHandle {
    MappingHandle mapping_handle = 1;
    MapGroupHandle map_group_handle = 2;
    MapHandle map_handle = 3;
}

message Map {
    MapHandle handle = 1; //not set on createMap call
    string name = 2;
    repeated MapElement elements = 3;
}

message MapHandle {
    uint32 identifier = 1;
    fixed32 permission = 2; //must use 'Permission' enum
}

message MapList {
    repeated Map map_list = 1;
}

message MapGroupHandle {
    uint32 identifier = 1;
    fixed32 permission = 2; //must use 'Permission' enum
}

message MapGroup {
    MapGroupHandle group_handle = 1; //not set on createMapGroup call
    string name = 2;
    MappingHandle related_mapping_handle = 3;
    MapGroupHandle parent_group_handle = 4;
    repeated MapGroupHandle children_map_group_handles = 5;
    repeated MapHandle map_handles = 6;
    string application_data = 7;
}

message MapGroupList {
    repeated MapGroup map_groups = 1;
}

message Mapping {
    MappingHandle handle = 1; //not set on createMapping call
    string name = 2;
    uint32 controller_identifier = 3;    
    MapGroupHandle active_map_group_handle = 4;
    repeated MapGroupHandle map_group_handles = 5;
    MapHandle active_map_handle = 6;
    repeated MapHandle map_handles = 7;
    string application_data = 8;
}

message MappingList {
    repeated Mapping mappings = 1;
}

enum SafetyIdentifier {
    UNSPECIFIED_BASE_SAFETY_IDENTIFIER              = 0;         //0x0
    FIRMWARE_UPDATE_FAILURE                         = 1;         //0x1
    EXTERNAL_COMMUNICATION_ERROR                    = 2;         //0x2
    MAXIMUM_AMBIENT_TEMPERATURE                     = 4;         //0x4
    MAXIMUM_CORE_TEMPERATURE                        = 8;         //0x8 
    JOINT_FAULT                                     = 16;        //0x10
    CYCLIC_DATA_JITTER                              = 32;        //0x20
    REACHED_MAXIMUM_EVENT_LOGS                      = 64;        //0x40
    NO_KINEMATICS_SUPPORT                           = 128;       //0x80
    ABOVE_MAXIMUM_DOF                               = 256;       //0x100
    NETWORK_ERROR                                   = 512;       //0x200
    UNABLE_TO_REACH_POSE                            = 1024;      //0x400
    JOINT_DETECTION_ERROR                           = 2048;      //0x800
    NETWORK_INITIALIZATION_ERROR                    = 4096;      //0x1000
    MAXIMUM_CURRENT                                 = 8192;      //0x2000 
    MAXIMUM_VOLTAGE                                 = 16384;     //0x4000 
    MINIMUM_VOLTAGE                                 = 32768;     //0x8000 
    MAXIMUM_END_EFFECTOR_TRANSLATION_VELOCITY       = 65536;     //0x10000
    MAXIMUM_END_EFFECTOR_ORIENTATION_VELOCITY       = 131072;    //0x20000
    MAXIMUM_END_EFFECTOR_TRANSLATION_ACCELERATION   = 262144;    //0x40000
    MAXIMUM_END_EFFECTOR_ORIENTATION_ACCELERATION   = 524288;    //0x80000
    MAXIMUM_END_EFFECTOR_TRANSLATION_FORCE          = 1048576;   //0x100000
    MAXIMUM_END_EFFECTOR_ORIENTATION_FORCE          = 2097152;   //0x200000
    MAXIMUM_END_EFFECTOR_PAYLOAD                    = 4194304;   //0x400000
    EMERGENCY_STOP_ACTIVATED                        = 8388608;   //0x800000
    EMERGENCY_LINE_ACTIVATED                        = 16777216;  //0x1000000
    INRUSH_CURRENT_LIMITER_FAULT                    = 33554432;  //0x2000000
    NVRAM_CORRUPTED                                 = 67108864;  //0x4000000
    INCOMPATIBLE_FIRMWARE_VERSION                   = 134217728; //0x8000000
    POWERON_SELF_TEST_FAILURE                       = 268435456; //0x10000000
}

message TransformationMatrix {
    TransformationRow r0 = 1;
    TransformationRow r1 = 2;
    TransformationRow r2 = 3;
    TransformationRow r3 = 4;
}

message TransformationRow {
    float c0 = 1;
    float c1 = 2;
    float c2 = 3;
    float c3 = 4;
}

message Pose {
    float x = 1;
    float y = 2;
    float z = 3;
    float theta_x = 4;
    float theta_y = 5;
    float theta_z = 6;
}

message Position {
    float x = 1;
    float y = 2;
    float z = 3;
}

message Orientation {
    float theta_x = 1;
    float theta_y = 2;
    float theta_z = 3;
}

enum JointTrajectoryConstraintType {
    UNSPECIFIED_JOINT_CONSTRAINT = 0;
    JOINT_CONSTRAINT_DURATION = 1;
    JOINT_CONSTRAINT_SPEED = 2;
}

message CartesianSpeed {
    float translation = 1;
    float orientation = 2;
}

message CartesianTrajectoryConstraint {
    oneof type { 
        CartesianSpeed speed = 1;
        float duration = 2;
    }
}

message JointTrajectoryConstraint {
    JointTrajectoryConstraintType type = 1;
    float value = 2;
}

enum TwistMode {
    UNSPECIFIED_TWIST_MODE = 0;
    TWIST_TOOL_JOYSTICK = 1;
    TWIST_BASE_FRAME_JOYSTICK = 2;
    TWIST_CARTESIAN_JOYSTICK = 3;
}

message Twist {
    float linear_x = 1;
    float linear_y = 2;
    float linear_z = 3;
    float angular_x = 4;
    float angular_y = 5;
    float angular_z = 6;
}

message Admittance {
    AdmittanceMode admittance_mode = 1;
}

enum AdmittanceMode {
    UNSPECIFIED_ADMITTANCE_MODE = 0;
    CARTESIAN = 1;
    JOINT = 2;
    NULL_SPACE = 3;
    DISABLED = 4;
}

message CartesianReferenceFrameRequest {
    CartesianReferenceFrame reference_frame = 1;
}

enum CartesianReferenceFrame {
    UNSPECIFIED_CARTESIAN_REFERENCE_FRAME = 0;
    MIXED = 1;     // translation = base, orientation = tool
    TOOL = 2;     // translation = tool, orientation = tool
}

message ConstrainedPose { 
    Pose target_pose = 1;
    CartesianTrajectoryConstraint constraint = 2;
}

message ConstrainedPosition { 
    Position target_position = 1;
    CartesianTrajectoryConstraint constraint = 2;
}

message ConstrainedOrientation {
    Orientation target_orientation = 1;
    CartesianTrajectoryConstraint constraint = 2;
}

message TwistCommand {
    TwistMode mode = 1;
    Twist twist = 2;
    uint32 duration = 3; //if not 0, allows to set a limit in seconds to the TwistCommand
}

message ConstrainedJointAngles {
    JointAngles joint_angles = 1;
    JointTrajectoryConstraint constraint = 2;
}

message ConstrainedJointAngle {
    uint32 joint_identifier = 1;
    float value = 2;
    JointTrajectoryConstraint constraint = 3;
}

message JointAngles {
    repeated JointAngle joint_angles = 1;
}

message JointAngle {
    uint32 joint_identifier = 1;
    float value = 2;
}

message JointSpeeds {
    repeated JointSpeed joint_speeds = 1;
    uint32 duration = 2; //if not 0, allows to set a limit in seconds to the JointsSpeed
}

message JointSpeed {    
    uint32 joint_identifier = 1;
    float value = 2;
    uint32 duration = 3; //if not 0, allows to set a limit in seconds to the JointsSpeed
}

enum GripperMode {
    UNSPECIFIED_GRIPPER_MODE = 0;
    GRIPPER_FORCE = 1;
    GRIPPER_SPEED = 2;
    GRIPPER_POSITION = 3;
}

message GripperCommand {
    GripperMode mode = 1;
    //in position, admissible values for each finger is between 0...+1.0, where 0 is closed ans 1.0 is fully open
    //in speed or torque, admissible values for each finger is between -1.0 and +1.0, where +1.0 corresponds
    //to maximum opening speed and -1.0 corresponds to maximum closing speed
    Gripper gripper = 2;
    uint32 duration = 3;//if not 0, allows to set a limit in seconds to the GripperCommand
}

message GripperRequest {
    GripperMode mode = 1;
}

message Gripper {
    repeated Finger finger = 1;
}

message Finger {    
    uint32 finger_identifier = 1;
    float value = 2;
}

enum NavigationDirection {
    UNSPECIFIED_NAVIGATION_DIRECTION = 0;
    NEXT = 1;
    UP = 2;
    DOWN = 3;
    PREVIOUS = 4;
}

enum JointNavigationDirection {  
    UNSPECIFIED_JOINT_NAVIGATION_DIRECTION = 0;
    JOINT_NEXT = 1;  
    JOINT_PREVIOUS = 2;
}

enum SoundType {
    UNSPECIFIED_SOUND_TYPE = 0;
    BIP_SERIES = 1;
    SINGLE_BIP = 2;
}

enum LedState {
    UNSPECIFIED_LED_STATE = 0;
    LED_OFF = 1;
    LED_PULSE = 2;
    LED_ON = 3;
}

enum GpioState {
    UNSPECIFIED_GPIO_STATE = 0;
    GPIO_OFF = 1;
    GPIO_PULSE = 2;
    GPIO_ON = 3;
}

message SystemTime {
    uint32 sec = 1; //seconds after the minute(0-59)
    uint32 min = 2; //minutes after the hour (0-59)
    uint32 hour = 3;//hours since mignight (0-23)
    uint32 mday = 4;//day of the month (1-31)
    uint32 mon = 5; //months since January (0-11)
    uint32 year = 6;//years since 1900
}

enum Xbox360DigitalInputIdentifier {  
    UNSPECIFIED_XBOX360_DIGITAL = 0;
    XBOX360_PAD_UP = 1;  
    XBOX360_PAD_DOWN = 2;
    XBOX360_PAD_LEFT = 3;
    XBOX360_PAD_RIGHT = 4;
    XBOX360_FILE_BUTTON_START = 5;
    XBOX360_DOCUMENT_BUTTON_BACK = 6;
    XBOX360_LEFT_THUMB_BUTTON = 7;
    XBOX360_RIGHT_THUMB_BUTTON = 8;
    XBOX360_LEFT_SHOULDER = 9;
    XBOX360_RIGHT_SHOULDER = 10;
    XBOX360_BUTTON_A = 13;
    XBOX360_BUTTON_B = 14;
    XBOX360_BUTTON_X = 15;
    XBOX360_BUTTON_Y = 16;   
}

enum Xbox360AnalogInputIdentifier {
    UNSPECIFIED_XBOX360_ANALOG = 0;
    XBOX360_THUMB_LEFT_X = 1;
    XBOX360_THUMB_LEFT_Y = 2;
    XBOX360_THUMB_RIGHT_X = 3;
    XBOX360_THUMB_RIGHT_Y = 4;
    XBOX360_TRIGGER_LEFT = 5;
    XBOX360_TRIGGER_RIGHT = 6;
}

message ActuatorInformation {
    uint32 count = 1;
}

message ArmStateInformation {
    Kinova.Api.Common.ArmState active_state = 1;
    Kinova.Api.Common.Connection connection = 2; //connection information of the last processed command which triggered an arm state change
}

/**
  * Message that contains a arm state event
 */
 message ArmStateNotification {
    Kinova.Api.Common.ArmState active_state = 1; //new arm state
    Kinova.Api.Common.Timestamp timestamp = 2; //event timestamp
    Kinova.Api.Common.Connection connection = 3; //connection that caused the arm state event
}

